// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Marain.Tenancy.Client.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class Link
    {
        /// <summary>
        /// Initializes a new instance of the Link class.
        /// </summary>
        public Link()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Link class.
        /// </summary>
        /// <param name="href">Either a URI [RFC3986] or URI Template [RFC6570]
        /// of the target resource.</param>
        /// <param name="templated">URI Template</param>
        /// <param name="type">When present, used as a hint to indicate the
        /// media type expected when dereferencing the target resource.</param>
        /// <param name="name">When present, may be used as a secondary key for
        /// selecting link objects that contain the same relation type.</param>
        /// <param name="profile">A URI that, when dereferenced, results in a
        /// profile to allow clients to learn about additional semantics
        /// (constraints, conventions, extensions) that are associated with the
        /// target resource representation, in addition to those defined by the
        /// HAL media type and relations.</param>
        /// <param name="title">When present, is used to label the destination
        /// of a link such that it can be used as a human-readable identifier
        /// (e.g. a menu entry) in the language indicated by the
        /// Content-Language header (if present).</param>
        /// <param name="hreflang">When present, is a hint in RFC5646 format
        /// indicating what the language of the result of dereferencing the
        /// link should be.  Note that this is only a hint; for example, it
        /// does not override the Content-Language header of a HTTP response
        /// obtained by actually following the link.</param>
        public Link(string href, bool? templated = default(bool?), string type = default(string), string name = default(string), string profile = default(string), string title = default(string), string hreflang = default(string))
        {
            Href = href;
            Templated = templated;
            Type = type;
            Name = name;
            Profile = profile;
            Title = title;
            Hreflang = hreflang;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets either a URI [RFC3986] or URI Template [RFC6570] of
        /// the target resource.
        /// </summary>
        [JsonProperty(PropertyName = "href")]
        public string Href { get; set; }

        /// <summary>
        /// Gets or sets URI Template
        /// </summary>
        /// <remarks>
        /// Is true when the link object's href property is a URI Template.
        /// Defaults to false.
        /// </remarks>
        [JsonProperty(PropertyName = "templated")]
        public bool? Templated { get; set; }

        /// <summary>
        /// Gets or sets when present, used as a hint to indicate the media
        /// type expected when dereferencing the target resource.
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Gets or sets when present, may be used as a secondary key for
        /// selecting link objects that contain the same relation type.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets a URI that, when dereferenced, results in a profile to
        /// allow clients to learn about additional semantics (constraints,
        /// conventions, extensions) that are associated with the target
        /// resource representation, in addition to those defined by the HAL
        /// media type and relations.
        /// </summary>
        [JsonProperty(PropertyName = "profile")]
        public string Profile { get; set; }

        /// <summary>
        /// Gets or sets when present, is used to label the destination of a
        /// link such that it can be used as a human-readable identifier (e.g.
        /// a menu entry) in the language indicated by the Content-Language
        /// header (if present).
        /// </summary>
        [JsonProperty(PropertyName = "title")]
        public string Title { get; set; }

        /// <summary>
        /// Gets or sets when present, is a hint in RFC5646 format indicating
        /// what the language of the result of dereferencing the link should
        /// be.  Note that this is only a hint; for example, it does not
        /// override the Content-Language header of a HTTP response obtained by
        /// actually following the link.
        /// </summary>
        [JsonProperty(PropertyName = "hreflang")]
        public string Hreflang { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Href == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Href");
            }
        }
    }
}
