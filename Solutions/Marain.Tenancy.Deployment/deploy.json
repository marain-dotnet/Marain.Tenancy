{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "stackName": {
      "type": "string"
    },
    "serviceName": {
      "type": "string"
    },
    "environment": {
      "type": "string"
    },
    "tenancyStorageSku": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ]
    },
    "appInsightsInstrumentationKey": {
      "type": "string"
    },
    "functionEasyAuthAadClientId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Enable EasyAuth for AAD using the specified Client ID/App ID"
      }
    },
    "_artifactsLocation": {
      "type": "string"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring"
    }
  },
  "variables": {
    "resourceNameRoot": "[concat(parameters('stackName'), parameters('environment'))]",
    "defaultName": "[concat(variables('resourceNameRoot'), parameters('serviceName'))]",
    "tenancyStorageName": "[substring(concat(variables('resourceNameRoot'), parameters('serviceName'), uniqueString(resourceGroup().id)), 0, 24)]",
    "tenancyStorageKeySecretName": "TenancyStorageAccountKey",
    "functionsAppName": "[variables('defaultName')]",
    "keyVaultName": "[substring(concat(variables('resourceNameRoot'), parameters('serviceName'), uniqueString(resourceGroup().id)), 0, 24)]",
    "keyVaultDiagnosticStorageAccountName": "[substring(concat(variables('resourceNameRoot'), parameters('serviceName'), 'kvdiag', uniqueString(resourceGroup().id)), 0, 24)]",
    "tenantId": "[subscription().tenantID]",
    "subscriptionId": "[subscription().subscriptionID]",
    "functionsAppDeployName": "[concat(deployment().name, '-functions-app')]",
    "keyVaultDeployName": "[concat(deployment().name, '-key-vault')]",
    "tenantStorageDeployName": "[concat(deployment().name, '-tenant-root-storage')]",
    "tagValues": {
      "stackName": "[parameters('stackName')]",
      "serviceName": "[parameters('serviceName')]",
      "environment": "[parameters('environment')]"
    }
  },
  "resources": [
    {
      "name": "[variables('tenantStorageDeployName')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "dependsOn": [
        "[variables('functionsAppDeployName')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/Templates/storage.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[variables('tenancyStorageName')]"
          },
          "storageAccountType": {
            "value": "[parameters('tenancyStorageSku')]"
          },
          "storageAccountLocation": {
            "value": "[resourceGroup().location]"
          },
          "storageAccountOwnerPrincipalIds": {
            "value": [
              "[reference(variables('functionsAppDeployName')).outputs.servicePrincipalId.value]"
            ]
          },
          "tagValues": {
            "value": "[variables('tagValues')]"
          }
        }
      }
    },
    {
      "name": "[variables('keyVaultDeployName')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/Templates/key-vault.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "tenantId": {
            "value": "[variables('tenantId')]"
          },
          "keyVaultName": {
            "value": "[variables('keyVaultName')]"
          },
          "diagnosticsStorageAccountName": {
            "value": "[variables('keyVaultDiagnosticStorageAccountName')]"
          }
        }
      }
    },
    {
      "name": "[concat(variables('keyVaultDeployName'), '-secret-storage-key')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "dependsOn": [
        "[variables('tenantStorageDeployName')]",
        "[variables('keyVaultDeployName')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/Templates/key-vault-secret.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyVaultName": {
            "value": "[variables('keyVaultName')]"
          },
          "secretName": {
            "value": "[variables('tenancyStorageKeySecretName')]"
          },
          "contentValue": {
            "value": "[reference(variables('tenantStorageDeployName'), '2016-09-01').outputs.storageAccountKey.value]"
          }
        }
      }
    },
    {
      "name": "[variables('functionsAppDeployName')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/Templates/functions-app.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "functionsAppName": { "value": "[variables('functionsAppName')]" },
          "easyAuthAadClientId": { "value": "[parameters('functionEasyAuthAadClientId')]" },
          "_artifactsLocation": { "value": "[parameters('_artifactsLocation')]" },
          "_artifactsLocationSasToken": { "value": "[parameters('_artifactsLocationSasToken')]" }
        }
      }
    },
    {
      "name": "[concat(variables('functionsAppDeployName'), '-settings')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "dependsOn": [
        "[variables('functionsAppDeployName')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/Templates/functions-app-settings.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountConnectionString": { "value": "[reference(variables('functionsAppDeployName'), '2016-09-01').outputs.storageAccountConnectionString.value]" },
          "runFromPackage": { "value": "1" },
          "functionsAppName": { "value": "[variables('functionsAppName')]" },
          "tenantId": { "value": "[variables('tenantId')]" },
          "subscriptionId": { "value": "[variables('subscriptionId')]" },
          "applicationInsightsInstrumentationKey": { "value": "[parameters('appInsightsInstrumentationKey')]" },
          "keyVaultName": { "value": "[variables('keyVaultName')]" },
          "storageAccountName": { "value": "[variables('tenancyStorageName')]" },
          "storageAccountKeyName": { "value": "[variables('tenancyStorageKeySecretName')]" }
        }
      }
    },
    {
      "name": "[concat(deployment().name, '-function-key-vault-access')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "dependsOn": [
        "[variables('functionsAppDeployName')]",
        "[variables('keyVaultDeployName')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/Templates/key-vault-access-policy.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyVaultName": {
            "value": "[variables('keyVaultName')]"
          },
          "objectName": {
            "value": "[variables('functionsAppName')]"
          },
          "objectResourceGroup": {
            "value": "[resourceGroup().name]"
          },
          "objectResourceType": {
            "value": "Microsoft.Web/sites"
          },
          "permissions": {
            "value": {
              "secrets": [
                "get"
              ]
            }
          }
        }
      }
    }
  ],
  "outputs": {
    "tenancyStorageAccountName": {
      "type": "string",
      "value": "[variables('tenancyStorageName')]"
    },
    "keyVaultName": {
      "type": "string",
      "value": "[variables('keyVaultName')]"
    },
    "functionsAppName": {
      "type": "string",
      "value": "[variables('functionsAppName')]"
    },
    "functionServicePrincipalId": {
      "type": "string",
      "value": "[reference(variables('functionsAppDeployName')).outputs.servicePrincipalId.value]"
    }
  }
}