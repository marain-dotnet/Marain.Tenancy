openapi: '3.0.0'
info:
  version: 1.0.0
  title: Tenancy Service
servers:
  - url: https://tenancy.marain.io
paths:
  /{tenantId}/marain/tenant:
    patch:
      tags:
        - Tenancy
      summary: Update a tenant
      description: Updates the tenant
      operationId: updateTenant
      parameters:
        - $ref: '#/components/parameters/tenantId'
      requestBody:
        required: true
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateTenantJsonPatchArray'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        # Updates to the root tenant are not supported, because clients are expected to use a
        # local synthetic root tenant object, and therefore typically wouldn't ever see any
        # settings applied to the root tenant. So we block such attempts.
        '405':
          description: Method not allowed
        # If the patch attempts to modify anything other than the tenant name or properties,
        # or to delete anything other than properties, 
        '422':
          description: Unprocessable entity
    get:
      tags:
        - Tenancy
      summary: Gets a tenant
      description: Gets the tenant
      operationId: getTenant
      parameters:
        - $ref: '#/components/parameters/tenantId'
        - $ref: '#/components/parameters/ifNoneMatch'
      responses:
        '200':
          description: Successful operation
          headers:
            Cache-Control:
              description: Caching instructions for clients
              schema:
                type: string
            ETag:
              description: The etag for the updated tenant
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
        '304':
          description: Not modified
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
  /{tenantId}/marain/tenant/children:
    get:
      tags:
        - Tenancy
      summary: Get all child tenants of the current tenant
      description: Get all child tenants of the current tenant
      operationId: getChildren
      parameters:
        - $ref: '#/components/parameters/tenantId'
        - $ref: '#/components/parameters/continuationToken'
        - $ref: '#/components/parameters/maxItems'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChildTenants'
        '400':
          description: Bad request
        '404':
          description: Not found
        '403':
          description: Forbidden
    post:
      tags:
        - Tenancy
      summary: Create a child tenant
      description: Creates a child tenant of the parent tenant
      operationId: createChildTenant
      parameters:
        - $ref: '#/components/parameters/tenantId'
        - $ref: '#/components/parameters/tenantName'
        - $ref: '#/components/parameters/wellKnownChildTenantGuid'
      responses:
        '201':
          description: Successful operation
          headers:
            Location:
              description: The location of the created tenant
              schema:
                type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Tenant not found
        '409':
          description: A child tenant with this ID was already created.
  /{tenantId}/marain/tenant/children/{childTenantId}:
    delete:
      tags:
        - Tenancy
      summary: Delete a child tenant by ID
      description: Deletes a child tenant of the parent tenant by ID
      operationId: deleteChildTenant
      parameters:
        - $ref: '#/components/parameters/tenantId'
        - $ref: '#/components/parameters/childTenantId'
      responses:
        '200':
          description: Successful operation
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Tenant not found.
components:
  schemas:
    Link:
      type: object
      required:
        - href
      properties:
        href:
          type: string
          title: URI of the target resource
          description: Either a URI [RFC3986] or URI Template [RFC6570] of the target
            resource.
        templated:
          type: boolean
          default: false
          title: URI Template
          description: Is true when the link object's href property is a URI Template.
            Defaults to false.
        type:
          type: string
          pattern: "^(application|audio|example|image|message|model|multipart|text|video)\\/[a-zA-Z0-9!#\\$&\\.\\+-\\^_]{1,127}$"
          title: Media type indication of the target resource
          description: When present, used as a hint to indicate the media type expected
            when dereferencing the target resource.
        name:
          type: string
          title: Secondary key
          description: When present, may be used as a secondary key for selecting
            link objects that contain the same relation type.
        profile:
          type: string
          format: uri
          title: Additional semantics of the target resource
          description: A URI that, when dereferenced, results in a profile to allow
            clients to learn about additional semantics (constraints, conventions,
            extensions) that are associated with the target resource representation,
            in addition to those defined by the HAL media type and relations.
        title:
          type: string
          title: Human-readable identifier
          description: When present, is used to label the destination of a link
            such that it can be used as a human-readable identifier (e.g. a menu
            entry) in the language indicated by the Content-Language header (if
            present).
        hreflang:
          type: string
          pattern: "^([a-zA-Z]{2,3}(-[a-zA-Z]{3}(-[a-zA-Z]{3}){0,2})?(-[a-zA-Z]{4})?(-([a-zA-Z]{2}|[0-9]{3}))?(-([a-zA-Z0-9]{5,8}|[0-9][a-zA-Z0-9]{3}))*([0-9A-WY-Za-wy-z](-[a-zA-Z0-9]{2,8}){1,})*(x-[a-zA-Z0-9]{2,8})?)|(x-[a-zA-Z0-9]{2,8})|(en-GB-oed)|(i-ami)|(i-bnn)|(i-default)|(i-enochian)|(i-hak)|(i-klingon)|(i-lux)|(i-mingo)|(i-navajo)|(i-pwn)|(i-tao)|(i-tay)|(i-tsu)|(sgn-BE-FR)|(sgn-BE-NL)|(sgn-CH-DE)|(art-lojban)|(cel-gaulish)|(no-bok)|(no-nyn)|(zh-guoyu)|(zh-hakka)|(zh-min)|(zh-min-nan)|(zh-xiang)$"
          title: Language indication of the target resource [RFC5988]
          description: When present, is a hint in RFC5646 format indicating what
            the language of the result of dereferencing the link should be.  Note
            that this is only a hint; for example, it does not override the Content-Language
            header of a HTTP response obtained by actually following the link.
    PropertyBag:
      type: object
      additionalProperties:
        oneOf:
          - type: array
          - type: boolean
          - type: integer
          - type: number
          - type: object
          - type: string
    Resource:
      type: object
      properties:
        _links:
          type: object
          title: Hyperlink
          description: Represents a hyperlink from the cotntaining resource to a URI.
          additionalProperties:
            oneOf:
            - $ref: '#/components/schemas/Link'
            - type: array
              items:
                $ref: '#/components/schemas/Link'
              uniqueItems: true
              additionalProperties: false
        _embedded:
          type: object
          additionalProperties:
            oneOf:
            - $ref: '#/components/schemas/Resource'
            - type: array
              items:
                $ref: '#/components/schemas/Resource'
              uniqueItems: true
              additionalProperties: false
      additionalProperties: true
    Tenant:
      anyOf:
      - $ref: '#/components/schemas/Resource'
      - type: object
        properties:
          id:
            type: string
            description: The unique ID of the tenant. This forms a path with parent tenants. 
          name:
            type: string
            description: The name of the tenant.
          eTag:
            type: string
          contentType:
            type: string
            description: The content type of the tenant.
          properties:
            $ref: '#/components/schemas/PropertyBag'
        required:
          - id
          - name
          - contentType
    ChildTenants:
      description: A resource containing links for the child tenants.
      anyOf:
      - $ref: '#/components/schemas/Resource'
      - type: object
    ProblemDetails:
      required:
        - status
        - detail
      properties:
        status:
          type: integer
          format: int32
        detail:
          type: string
        title:
          type: string
        instance:
          type: string
          format: url
        type: 
          type: string
          format: url
        validationErrors: 
          type: array
          items:
            anyOf:
              - type: array
              - type: boolean
              - type: integer
              - type: number
              - type: object
              - type: string
      additionalProperties: true
    UpdateTenantJsonPatchArray:
      description: An update to a tenant in the form of a JSON Patch document as described by RFC6902
      type: array
      items:
        $ref: "#/components/schemas/UpdateTenantJsonPatchEntry"
    UpdateTenantJsonPatchEntry:
      type: object
      description: An operation describing one change to a tenant as part of an UpdateTenantJsonPatchArray
      required:
        - "op"
        - "path"
      # Note: http://json.schemastore.org/json-patch uses a mixture of allOf and oneOf to constrain
      # documents to valid combinations of op and value. (I.e., value should only be present for
      # add, replace, and test, operations.) However, AutoRest appears not to understand this,
      # so we're taking a more basic approach here.
      properties:
        path: 
          type: string 
          description: A JSON-Pointer. Either /name or /properties/propertyName
        op: 
          type: string 
          description: The operation to be performed.
          # Note: JSON Patch also supports move, copy, and test, but we only support these:
          enum: [add, replace, remove]
        value: 
          description: The value to add or set
          anyOf:
            - type: string
            - type: object
            - type: array
            - type: boolean
            - type: integer
            - type: number
  parameters:
    ifNoneMatch:
      name: If-None-Match
      in: header
      x-ms-parameter-location: method
      description: The ETag of the last known version.
      required: false
      schema:
        type: string
    tenantId:
      name: tenantId
      in: path
      x-ms-parameter-location: method
      description: The tenant within which the request should operate
      required: true
      schema:
        type: string
    tenantName:
      name: tenantName
      in: query
      x-ms-parameter-location: method
      description: The name for the new tenant
      required: true
      schema:
        type: string
    wellKnownChildTenantGuid:
      name: wellKnownChildTenantGuid
      in: query
      x-ms-parameter-location: method
      description: The name for the new tenant
      required: false
      schema:
        type: string
        format: uuid
    childTenantId:
      name: childTenantId
      in: path
      x-ms-parameter-location: method
      description: The child tenant within the current tenant.
      required: true
      schema:
        type: string
    continuationToken:
      name: continuationToken
      in: query
      x-ms-parameter-location: method
      description: A continuation token for an operation where more data is available
      required: false
      schema:
        type: string
    maxItems:
      name: maxItems
      in: query
      x-ms-parameter-location: method
      description: The maximum number of items to return in the request. Fewer than this number may be returned.
      required: false
      schema:
        type: integer
